import { HorizontalBox , VerticalBox} from "std-widgets.slint";
import { StyleMetrics , ScrollView, ListView, StandardTableView} from "std-widgets.slint";
import { HorizontalBox , VerticalBox} from "std-widgets.slint";
import { StyleMetrics , ScrollView, ListView, StandardTableView, GroupBox} from "std-widgets.slint";
import { CardAdapter } from "./components/card.slint";
import { CardGrid, CardGridAdapter } from "./components/card_grid.slint";
import { LinkAdapter, Links, Link} from "./components/link.slint";
import { Palette, Navigator, AppState } from "./common.slint";
import { MediumAdapter } from "./components/medium.slint";
import { ImageLinkAdapter, LinkAdapter, Links, Link} from "./components/link.slint";
import { ArtistDetailsAdapter } from "./pages/artist_details.slint";
import { ReleaseDetailsAdapter } from "./pages/release_details.slint";
import { ReleaseGroupDetailsAdapter } from "./pages/release_group_details.slint";
import { RecordingDetailsAdapter } from "./pages/recording_details.slint";
import { SettingsAdapter } from "./pages/settings.slint";
import { HomeAdapter } from "./pages/home.slint";
import { PlayerBarAdapter } from "./player_bar.slint";
import { ArtistDetails } from "pages/artist_details.slint";
import { ReleaseGroupDetails } from "pages/release_group_details.slint";
import { ReleaseDetails } from "pages/release_details.slint";
import { RecordingDetails } from "pages/recording_details.slint";
import { Home } from "pages/home.slint";
import { Settings } from "pages/settings.slint";
import { PlayerBar } from "player_bar.slint";
import { SideBar } from "side_bar.slint";

export { Navigator, LinkAdapter, ImageLinkAdapter, CardAdapter, Palette, AppState }

import "../fonts/Roboto/Roboto-Black.ttf";
import "../fonts/Roboto/Roboto-BlackItalic.ttf";
import "../fonts/Roboto/Roboto-Bold.ttf";
import "../fonts/Roboto/Roboto-BoldItalic.ttf";
import "../fonts/Roboto/Roboto-Italic.ttf";
import "../fonts/Roboto/Roboto-Light.ttf";
import "../fonts/Roboto/Roboto-LightItalic.ttf";
import "../fonts/Roboto/Roboto-Medium.ttf";
import "../fonts/Roboto/Roboto-MediumItalic.ttf";
import "../fonts/Roboto/Roboto-Regular.ttf";
import "../fonts/Roboto/Roboto-Thin.ttf";
import "../fonts/Roboto/Roboto-ThinItalic.ttf";

export component AppWindow inherits Window {
    in-out property <int> page: 1;
    // TODO Note to self: Currently you can't expose properties on
    // sub-components, so we have to bubble them all to the top for now.
    // https://github.com/slint-ui/slint/issues/784
    in-out property <CardGridAdapter> card-grid-adapter;
    in-out property <ArtistDetailsAdapter> artist-details;
    in-out property <ReleaseGroupDetailsAdapter> release-group-details;
    in-out property <ReleaseDetailsAdapter> release-details;
    in-out property <RecordingDetailsAdapter> recording-details;
    in-out property <SettingsAdapter> settings-adapter;
    in-out property <HomeAdapter> home-adapter;
    in-out property <PlayerBarAdapter> player-bar-adapter;
    
    title: "Dimple";
    icon: @image-url("../images/icon_512x512.png");
    preferred-width: 1440px;
    preferred-height: 1024px;

    VerticalLayout {
        padding: 8px;
        padding-top: 4px;
        spacing: 4px;
        HorizontalLayout {
            spacing: 8px;
            padding: 0;
            GroupBox {
                SideBar {
                }
            }
            GroupBox {
                horizontal-stretch: 1;
                Rectangle {
                    if page == 0: VerticalLayout {
                        ScrollView {                        
                            card-grid := CardGrid {
                                cards: root.card-grid-adapter.cards;
                                parent-width: parent.width;
                            }
                        }
                        Text {
                            horizontal-alignment: right;
                            text: card-grid-adapter.cards.length + " items";
                        }
                    }
                    if page == 1: ArtistDetails {  
                        model: root.artist-details;
                    }
                    if page == 2: ReleaseGroupDetails {  
                        model: root.release-group-details;
                    }
                    if page == 3: ReleaseDetails {  
                        model: root.release-details;
                    }                
                    if page == 4: RecordingDetails {  
                        model: root.recording-details;
                    }
                    if page == 5: VerticalLayout {
                        Home {  
                            adapter: root.home-adapter;
                        }
                        Text {
                            horizontal-alignment: right;
                            text: root.home-adapter.rows.length + " items";
                        }
                    }
                    if page == 6: Settings {  
                        adapter: root.settings-adapter;
                    }
                }
            }    
        }   
        GroupBox {
            vertical-stretch: 0;
            PlayerBar {
                adapter: player-bar-adapter;
            }
        }
    }
}

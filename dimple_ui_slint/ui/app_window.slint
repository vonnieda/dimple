import { HorizontalBox , VerticalBox} from "std-widgets.slint";
import { StyleMetrics , ScrollView, ListView, StandardTableView} from "std-widgets.slint";
import { HorizontalBox , VerticalBox} from "std-widgets.slint";
import { StyleMetrics , ScrollView, ListView, StandardTableView, GroupBox} from "std-widgets.slint";
import { CardAdapter } from "./components/card.slint";
import { CardGrid, CardGridAdapter } from "./components/card_grid.slint";
import { LinkAdapter, Links, Link} from "./components/link.slint";
import { Styles, Navigator, AppState } from "./common.slint";
import { ImageLinkAdapter, LinkAdapter, Links, Link} from "./components/link.slint";
import { ArtistDetailsAdapter } from "./pages/artist_details.slint";
import { ReleaseDetailsAdapter, ReleaseDetails } from "./pages/release_details.slint";
import { SettingsAdapter } from "./pages/settings.slint";
import { HomeAdapter } from "./pages/home.slint";
import { PlayerBarAdapter, PlayerState } from "./player_bar.slint";
import { ArtistDetails } from "pages/artist_details.slint";
import { ReleaseDetails } from "pages/release_details.slint";
import { TrackDetails, TrackDetailsAdapter } from "pages/track_details.slint";
import { TrackListAdapter } from "pages/track_list.slint";
import { Home } from "pages/home.slint";
import { Settings, PluginAdapter } from "pages/settings.slint";
import { PlayerBar } from "player_bar.slint";
import { SideBar, SideBarAdapter } from "side_bar.slint";
import { ArtistList } from "pages/artist_list.slint";
import { ReleaseList } from "pages/release_list.slint";
import { TrackList } from "pages/track_list.slint";
import { SearchResults } from "pages/search_results.slint";
import { GenreList } from "pages/genre_list.slint";
import { GenreDetailsAdapter, GenreDetails } from "pages/genre_details.slint";
import { PlaylistList, PlaylistListAdapter } from "pages/playlist_list.slint";
import { PlaylistDetailsAdapter, PlaylistDetails } from "pages/playlist_details.slint";
import { HistoryListAdapter, HistoryList } from "pages/history_list.slint";
import { QueueDetailsAdapter, QueueDetails } from "pages/queue_details.slint";

import "../fonts/Roboto/Roboto-Black.ttf";
import "../fonts/Roboto/Roboto-BlackItalic.ttf";
import "../fonts/Roboto/Roboto-Bold.ttf";
import "../fonts/Roboto/Roboto-BoldItalic.ttf";
import "../fonts/Roboto/Roboto-Italic.ttf";
import "../fonts/Roboto/Roboto-Light.ttf";
import "../fonts/Roboto/Roboto-LightItalic.ttf";
import "../fonts/Roboto/Roboto-Medium.ttf";
import "../fonts/Roboto/Roboto-MediumItalic.ttf";
import "../fonts/Roboto/Roboto-Regular.ttf";
import "../fonts/Roboto/Roboto-Thin.ttf";
import "../fonts/Roboto/Roboto-ThinItalic.ttf";

import "../fonts/Manrope/fonts/ttf/Manrope-Bold.ttf";
import "../fonts/Manrope/fonts/ttf/Manrope-ExtraBold.ttf";
import "../fonts/Manrope/fonts/ttf/Manrope-ExtraLight.ttf";
import "../fonts/Manrope/fonts/ttf/Manrope-Light.ttf";
import "../fonts/Manrope/fonts/ttf/Manrope-Medium.ttf";
import "../fonts/Manrope/fonts/ttf/Manrope-Regular.ttf";
import "../fonts/Manrope/fonts/ttf/Manrope-SemiBold.ttf";

import "../fonts/Commissioner/static/Commissioner/Commissioner-Black.ttf";
import "../fonts/Commissioner/static/Commissioner/Commissioner-Bold.ttf";
import "../fonts/Commissioner/static/Commissioner/Commissioner-ExtraBold.ttf";
import "../fonts/Commissioner/static/Commissioner/Commissioner-ExtraLight.ttf";
import "../fonts/Commissioner/static/Commissioner/Commissioner-Light.ttf";
import "../fonts/Commissioner/static/Commissioner/Commissioner-Medium.ttf";
import "../fonts/Commissioner/static/Commissioner/Commissioner-Regular.ttf";
import "../fonts/Commissioner/static/Commissioner/Commissioner-SemiBold.ttf";
import "../fonts/Commissioner/static/Commissioner/Commissioner-Thin.ttf";

import "../icons/phosphor/Fonts/regular/Phosphor.ttf";

export { Navigator, Styles, AppState, TrackListAdapter, 
    HistoryListAdapter, PlaylistDetailsAdapter,
    SettingsAdapter, TrackDetailsAdapter, QueueDetailsAdapter,
    PlaylistListAdapter, PluginAdapter, PlayerBarAdapter, 
    ReleaseDetailsAdapter, ArtistDetailsAdapter, GenreDetailsAdapter }

export enum Page { Home, SearchResults,
    ArtistList, ArtistDetails,
    ReleaseList, ReleaseDetails,
    TrackList, TrackDetails,
    PlaylistList, PlaylistDetails,
    Settings, GenreList, GenreDetails,
    QueueDetails, HistoryList
}

export component AppWindow inherits Window {
    title: "Dimple";
    icon: @image-url("../images/app_icon_512x512.png");
    preferred-width: 1440px;
    preferred-height: 1024px;
    default-font-size: Styles.default-font-size;
    default-font-family: "Roboto";
    // default-font-family: "Manrope";
    // default-font-family: "Commissioner";
    // default-font-weight: 500;

    in-out property <Page> page: TrackList;

    in-out property <HomeAdapter> home;
    in-out property <CardGridAdapter> search;
    in-out property <CardGridAdapter> artist-list;
    in-out property <CardGridAdapter> release-group-list;
    in-out property <CardGridAdapter> release-list;
    in-out property <CardGridAdapter> genre-list;
    in-out property <CardGridAdapter> playlist-list;
    in-out property <SideBarAdapter> sidebar;

    VerticalLayout {
        padding: 8px;
        padding-top: 4px;
        spacing: 4px;
        // NavBar {}
        HorizontalLayout {
            spacing: 8px;
            padding: 0;
            GroupBox {
                min-width: 220px;
                SideBar {
                    model: root.sidebar;
                }
            }
            VerticalLayout {
                GroupBox {
                    horizontal-stretch: 1;
                    Rectangle {
                        if page == Page.Home: Home {
                            model: root.home;
                        }
                        if page == Page.SearchResults: SearchResults {
                            model: root.search;
                        }
                        if page == Page.ArtistList: ArtistList {
                            model: root.artist-list;
                        }
                        if page == Page.ArtistDetails: ArtistDetails {}
                        if page == Page.ReleaseList: ReleaseList {  
                            model: root.release-list;
                        }                
                        if page == Page.ReleaseDetails: ReleaseDetails {}                
                        if page == Page.TrackList: TrackList {}
                        if page == Page.TrackDetails: TrackDetails {}  
                        if page == Page.GenreList: GenreList {  
                            model: root.genre-list;
                        }
                        if page == Page.GenreDetails: GenreDetails {}
                        if page == Page.PlaylistList: PlaylistList {  
                            model: root.playlist-list;
                        }
                        if page == Page.PlaylistDetails: PlaylistDetails {}
                        if page == Page.HistoryList: HistoryList {}
                        if page == Page.Settings: Settings {}
                        if page == Page.QueueDetails: QueueDetails {}
                    }
                }    
            }
        }   
        GroupBox {
            vertical-stretch: 0;
            PlayerBar {
            }
        }
    }
}

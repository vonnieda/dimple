import { HorizontalBox , VerticalBox} from "std-widgets.slint";
import { StyleMetrics , ScrollView, ListView, StandardTableView} from "std-widgets.slint";
import { HorizontalBox , VerticalBox} from "std-widgets.slint";
import { StyleMetrics , ScrollView, ListView, StandardTableView, GroupBox, LineEdit, Palette} from "std-widgets.slint";
import { CardAdapter } from "./components/card.slint";
import { CardGrid, CardGridAdapter } from "./components/card_grid.slint";
import { LinkAdapter, Links, Link} from "./components/link.slint";
import { Styles, Navigator, AppState } from "./common.slint";
import { ImageLinkAdapter, LinkAdapter, Links, Link} from "./components/link.slint";
import { ArtistDetailsAdapter } from "./pages/artist_details.slint";
import { ReleaseDetailsAdapter, ReleaseDetails } from "./pages/release_details.slint";
import { SettingsAdapter } from "./pages/settings.slint";
import { HomeAdapter } from "./pages/home.slint";
import { PlayerBarAdapter, PlayerState } from "./player_bar.slint";
import { ArtistDetails } from "pages/artist_details.slint";
import { ReleaseDetails } from "pages/release_details.slint";
import { TrackDetails, TrackDetailsAdapter } from "pages/track_details.slint";
import { TrackListAdapter } from "pages/track_list.slint";
import { Home } from "pages/home.slint";
import { Settings, PluginAdapter } from "pages/settings.slint";
import { PlayerBar } from "player_bar.slint";
import { SideBar, SideBarAdapter } from "side_bar.slint";
import { ArtistList } from "pages/artist_list.slint";
import { ReleaseList, ReleaseListAdapter } from "pages/release_list.slint";
import { TrackList } from "pages/track_list.slint";
import { SearchResults } from "pages/search_results.slint";
import { GenreList } from "pages/genre_list.slint";
import { GenreDetailsAdapter, GenreDetails } from "pages/genre_details.slint";
import { PlaylistList, PlaylistListAdapter } from "pages/playlist_list.slint";
import { PlaylistDetailsAdapter, PlaylistDetails } from "pages/playlist_details.slint";
import { HistoryListAdapter, HistoryList } from "pages/history_list.slint";
import { QueueDetailsAdapter, QueueDetails } from "pages/queue_details.slint";
import { FlowLayoutLogic, FlowLayoutResults } from "components/flow_layout.slint";

import "../fonts/Roboto/Roboto-Black.ttf";
import "../fonts/Roboto/Roboto-BlackItalic.ttf";
import "../fonts/Roboto/Roboto-Bold.ttf";
import "../fonts/Roboto/Roboto-BoldItalic.ttf";
import "../fonts/Roboto/Roboto-Italic.ttf";
import "../fonts/Roboto/Roboto-Light.ttf";
import "../fonts/Roboto/Roboto-LightItalic.ttf";
import "../fonts/Roboto/Roboto-Medium.ttf";
import "../fonts/Roboto/Roboto-MediumItalic.ttf";
import "../fonts/Roboto/Roboto-Regular.ttf";
import "../fonts/Roboto/Roboto-Thin.ttf";
import "../fonts/Roboto/Roboto-ThinItalic.ttf";

import "../fonts/Manrope/fonts/ttf/Manrope-Bold.ttf";
import "../fonts/Manrope/fonts/ttf/Manrope-ExtraBold.ttf";
import "../fonts/Manrope/fonts/ttf/Manrope-ExtraLight.ttf";
import "../fonts/Manrope/fonts/ttf/Manrope-Light.ttf";
import "../fonts/Manrope/fonts/ttf/Manrope-Medium.ttf";
import "../fonts/Manrope/fonts/ttf/Manrope-Regular.ttf";
import "../fonts/Manrope/fonts/ttf/Manrope-SemiBold.ttf";

import "../fonts/Commissioner/static/Commissioner/Commissioner-Black.ttf";
import "../fonts/Commissioner/static/Commissioner/Commissioner-Bold.ttf";
import "../fonts/Commissioner/static/Commissioner/Commissioner-ExtraBold.ttf";
import "../fonts/Commissioner/static/Commissioner/Commissioner-ExtraLight.ttf";
import "../fonts/Commissioner/static/Commissioner/Commissioner-Light.ttf";
import "../fonts/Commissioner/static/Commissioner/Commissioner-Medium.ttf";
import "../fonts/Commissioner/static/Commissioner/Commissioner-Regular.ttf";
import "../fonts/Commissioner/static/Commissioner/Commissioner-SemiBold.ttf";
import "../fonts/Commissioner/static/Commissioner/Commissioner-Thin.ttf";

import "../icons/phosphor/Fonts/regular/Phosphor.ttf";

export { Navigator, Styles, AppState, TrackListAdapter, 
    HistoryListAdapter, PlaylistDetailsAdapter,
    SettingsAdapter, TrackDetailsAdapter, QueueDetailsAdapter,
    PlaylistListAdapter, PluginAdapter, PlayerBarAdapter, 
    ReleaseDetailsAdapter, ArtistDetailsAdapter, GenreDetailsAdapter, 
    ReleaseListAdapter, FlowLayoutLogic, FlowLayoutResults, HomeAdapter }

export enum Page { Home, SearchResults,
    ArtistList, ArtistDetails,
    ReleaseList, ReleaseDetails,
    TrackList, TrackDetails,
    PlaylistList, PlaylistDetails,
    Settings, GenreList, GenreDetails,
    QueueDetails, HistoryList
}

component NavBarButton inherits TouchArea {
    in property <image> source;
    width: image.width;
    image := Image {
        source: root.source;
        colorize: parent.has-hover 
            ? Styles.link-color-hover
            : Palette.foreground;
        width: 24px;
    }
}

component NavBar inherits HorizontalBox {
    padding: 0;

    NavBarButton {
        source: @image-url("../icons/phosphor/SVGs/regular/users-three.svg");
        clicked => { Navigator.navigate("dimple://artists") }
    }
    NavBarButton {
        source: @image-url("../icons/phosphor/SVGs/regular/vinyl-record.svg");
        clicked => { Navigator.navigate("dimple://releases") }
    }
    NavBarButton {
        source: @image-url("../icons/phosphor/SVGs/regular/music-note.svg");
        clicked => { Navigator.navigate("dimple://track") }
    }
    NavBarButton {
        source: @image-url("../icons/phosphor/SVGs/regular/playlist.svg");
        clicked => { Navigator.navigate("dimple://playlists") }
    }
    NavBarButton {
        source: @image-url("../icons/phosphor/SVGs/regular/globe-simple.svg");
        clicked => { Navigator.navigate("dimple://genres") }
    }
    NavBarButton {
        source: @image-url("../icons/phosphor/SVGs/regular/clock-counter-clockwise.svg");
        clicked => { Navigator.navigate("dimple://history") }
    }
    Rectangle {
        width: parent.spacing;
    }
    NavBarButton {
        source: @image-url("../icons/phosphor/SVGs/regular/house.svg");
        clicked => { Navigator.navigate("dimple://home") }
    }
    NavBarButton {
        source: @image-url("../icons/phosphor/SVGs/regular/arrow-left.svg");
        clicked => { Navigator.navigate("dimple://back") }
    }
    NavBarButton {
        source: @image-url("../icons/phosphor/SVGs/regular/arrow-clockwise.svg");
        clicked => { Navigator.navigate("dimple://refresh") }
    }
    LineEdit {
        placeholder-text: "Search for songs, artists, genres, playlists, URLs...";
        edited(query) => { Navigator.navigate("dimple://search/" + query); }
        accepted(query) => { Navigator.navigate("dimple://search/" + query); }
        font-size: 1.3rem;
        height: self.font-size * 2;
    }
    NavBarButton {
        source: @image-url("../icons/phosphor/SVGs/regular/gear.svg");
        clicked => { Navigator.navigate("dimple://settings") }
    }
}

component HorizontalRule inherits Rectangle {
    height: 1px;
    background: Styles.thumbnail-border-color;
}

export component AppWindow inherits Window {
    title: "Dimple";
    icon: @image-url("../images/app_icon_512x512.png");
    preferred-width: 1440px;
    preferred-height: 1024px;
    default-font-size: Styles.default-font-size;
    // default-font-family: "Roboto";
    default-font-family: Styles.default-font-family;
    // default-font-family: "Commissioner";
    // default-font-weight: 500;
    // background: #1f1f1f;

    in-out property <Page> page: Home;

    in-out property <CardGridAdapter> search;
    in-out property <CardGridAdapter> artist-list;
    in-out property <CardGridAdapter> genre-list;
    in-out property <CardGridAdapter> playlist-list;
    in-out property <SideBarAdapter> sidebar;

    VerticalLayout {
        padding: 8px;
        padding-top: 4px;
        spacing: 4px;
        // NavBar {}
        HorizontalLayout {
            spacing: 8px;
            padding: 0;
            GroupBox {
                min-width: 220px;
                SideBar {
                    model: root.sidebar;
                }
            }
            VerticalLayout {
                GroupBox {
                    horizontal-stretch: 1;
                    Rectangle {
                        if page == Page.Home: Home {}
                        if page == Page.SearchResults: SearchResults {
                            model: root.search;
                        }
                        if page == Page.ArtistList: ArtistList {
                            model: root.artist-list;
                        }
                        if page == Page.ArtistDetails: ArtistDetails {}
                        if page == Page.ReleaseList: ReleaseList {}
                        if page == Page.ReleaseDetails: ReleaseDetails {}                
                        if page == Page.TrackList: TrackList {}
                        if page == Page.TrackDetails: TrackDetails {}  
                        if page == Page.GenreList: GenreList {  
                            model: root.genre-list;
                        }
                        if page == Page.GenreDetails: GenreDetails {}
                        if page == Page.PlaylistList: PlaylistList {  
                            model: root.playlist-list;
                        }
                        if page == Page.PlaylistDetails: PlaylistDetails {}
                        if page == Page.HistoryList: HistoryList {}
                        if page == Page.Settings: Settings {}
                        if page == Page.QueueDetails: QueueDetails {}
                    }
                }    
            }
        }   
        GroupBox {
            vertical-stretch: 0;
            PlayerBar {
            }
        }
    }
}

import { HorizontalBox , VerticalBox} from "std-widgets.slint";
import { StyleMetrics , ScrollView, ListView, StandardTableView} from "std-widgets.slint";
import { HorizontalBox , VerticalBox} from "std-widgets.slint";
import { StyleMetrics , ScrollView, ListView, StandardTableView, GroupBox} from "std-widgets.slint";
import { CardAdapter } from "./components/card.slint";
import { CardGrid, CardGridAdapter } from "./components/card_grid.slint";
import { LinkAdapter, Links, Link} from "./components/link.slint";
import { Palette, Navigator, AppState } from "./common.slint";
import { MediumAdapter } from "./components/medium.slint";
import { ImageLinkAdapter, LinkAdapter, Links, Link} from "./components/link.slint";
import { ArtistDetailsAdapter } from "./pages/artist_details.slint";
import { ReleaseDetailsAdapter } from "./pages/release_details.slint";
import { ReleaseGroupDetailsAdapter } from "./pages/release_group_details.slint";
import { SettingsAdapter } from "./pages/settings.slint";
import { HomeAdapter } from "./pages/home.slint";
import { PlayerBarAdapter } from "./player_bar.slint";
import { ArtistDetails } from "pages/artist_details.slint";
import { ReleaseGroupDetails } from "pages/release_group_details.slint";
import { ReleaseDetails } from "pages/release_details.slint";
import { TrackDetails, TrackDetailsAdapter } from "pages/track_details.slint";
import { TrackListAdapter } from "pages/track_list.slint";
import { Home } from "pages/home.slint";
import { Settings } from "pages/settings.slint";
import { PlayerBar } from "player_bar.slint";
import { SideBar } from "side_bar.slint";
import { ArtistList } from "pages/artist_list.slint";
import { ReleaseGroupList } from "pages/release_group_list.slint";
import { ReleaseList } from "pages/release_list.slint";
import { TrackList } from "pages/track_list.slint";

export { Navigator, Palette, AppState }

import "../fonts/Roboto/Roboto-Black.ttf";
import "../fonts/Roboto/Roboto-BlackItalic.ttf";
import "../fonts/Roboto/Roboto-Bold.ttf";
import "../fonts/Roboto/Roboto-BoldItalic.ttf";
import "../fonts/Roboto/Roboto-Italic.ttf";
import "../fonts/Roboto/Roboto-Light.ttf";
import "../fonts/Roboto/Roboto-LightItalic.ttf";
import "../fonts/Roboto/Roboto-Medium.ttf";
import "../fonts/Roboto/Roboto-MediumItalic.ttf";
import "../fonts/Roboto/Roboto-Regular.ttf";
import "../fonts/Roboto/Roboto-Thin.ttf";
import "../fonts/Roboto/Roboto-ThinItalic.ttf";
import { Search } from "pages/search.slint";

// I think I'm supposed to think of this more in terms of the whole state of
// the app, which the UI then reacts to / reflects. Right now what I'm doing
// feels like rebuilding the UI every time? But maybe that's just because
// for all these pages that's what I have to do?

export enum Page { Home, Search,
        ArtistList, ArtistDetails,
        ReleaseList, ReleaseDetails,
        ReleaseGroupList, ReleaseGroupDetails,
        TrackList, TrackDetails,
        PlaylistList, PlaylistDetails,
        Settings }


export component AppWindow inherits Window {
    in-out property <Page> page: Settings;

    // TODO Note to self: Currently you can't expose properties on
    // sub-components, so we have to bubble them all to the top.
    // See: https://github.com/slint-ui/slint/issues/784
    // Wait, how the heck do I hookup callbacks then?
    // Same way :(
    in-out property <HomeAdapter> home;
    in-out property <CardGridAdapter> search;
    in-out property <CardGridAdapter> artist-list;
    in-out property <ArtistDetailsAdapter> artist-details;
    in-out property <CardGridAdapter> release-group-list;
    in-out property <ReleaseGroupDetailsAdapter> release-group-details;
    in-out property <CardGridAdapter> release-list;
    in-out property <ReleaseDetailsAdapter> release-details;
    in-out property <TrackListAdapter> track-list;
    in-out property <TrackDetailsAdapter> track-details;
    in-out property <SettingsAdapter> settings;
    in-out property <PlayerBarAdapter> player-bar;

    title: "Dimple";
    icon: @image-url("../images/icon_512x512.png");
    preferred-width: 1440px;
    preferred-height: 1024px;

    VerticalLayout {
        padding: 8px;
        padding-top: 4px;
        spacing: 4px;
        HorizontalLayout {
            spacing: 8px;
            padding: 0;
            GroupBox {
                SideBar {
                }
            }
            GroupBox {
                horizontal-stretch: 1;
                Rectangle {
                    if page == Page.Home: Home {
                        model: root.home;
                    }
                    if page == Page.Search: Search {
                        model: root.search;
                    }
                    if page == Page.ArtistList: ArtistList {
                        model: root.artist-list;
                    }
                    if page == Page.ArtistDetails: ArtistDetails {  
                        model: root.artist-details;
                    }
                    if page == Page.ReleaseGroupList: ReleaseGroupList {  
                        model: root.release-group-list;
                    }
                    if page == Page.ReleaseGroupDetails: ReleaseGroupDetails {  
                        model: root.release-group-details;
                    }
                    if page == Page.ReleaseList: ReleaseList {  
                        model: root.release-list;
                    }                
                    if page == Page.ReleaseDetails: ReleaseDetails {  
                        model: root.release-details;
                    }                
                    if page == Page.TrackList: TrackList {  
                        model: root.track-list;
                    }
                    if page == Page.TrackDetails: TrackDetails {  
                        model: root.track-details;
                    }
                    if page == Page.Settings: Settings {  
                        adapter: root.settings;
                    }
                }
            }    
        }   
        GroupBox {
            vertical-stretch: 0;
            PlayerBar {
                model: player-bar;
            }
        }
    }
}

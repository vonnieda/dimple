import { StyleMetrics } from "std-widgets.slint";

export global Palette  {
    in-out property<int> font-weight-bold: 700;

    in-out property<length> thumbnail-width-small: 70px;
    in-out property<length> thumbnail-width-medium: 120px;
    in-out property<length> thumbnail-width-large: 200px;
    in-out property<length> thumbnail-width-extra-large: 275px;
    in-out property<length> thumbnail-border-radius: 5px;
    in-out property<length> thumbnail-border-width: 1px;
    in-out property<color> thumbnail-border-color: StyleMetrics.default-text-color;

    in-out property<color> link-color: StyleMetrics.default-text-color.mix(blue, 0.75);
}

export global Navigator {
    callback navigate(string);
    callback url() -> string;
}

export struct Link {
    name: string,
    url: string,
}

export struct ImageLink {
    image: image,
    name: string,
    url: string,
}

export component Links inherits HorizontalLayout {
    in property <[Link]> links;
    alignment: start;
    // TODO I think the kerning ends up incorrect when doing it this way. It
    // looks weird. But I don't know another way to get individual links with
    // fancy commas.
    for link[i] in links: HorizontalLayout {
        TouchArea {
            mouse-cursor: pointer;
            clicked => { Navigator.navigate(link.url); }
            Text {
                text: link.name;
                font-size: 1.3rem;
                wrap: word-wrap;
                color: parent.has-hover 
                    ? Palette.link-color
                    : StyleMetrics.default-text-color;
            }    
        }
        // TODO edge cases
        if i < links.length - 2:
            Text {
                text: ", ";
                font-size: 1.3rem;
                wrap: word-wrap;
            }    
        if i == links.length - 2:
            Text {
                text: ", and ";
                font-size: 1.3rem;
                wrap: word-wrap;
            }    
    }
}



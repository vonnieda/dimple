import { Styles, Navigator, Texxt } from "../common.slint";
import {StyleMetrics, Palette} from "std-widgets.slint";
import { FlowLayout, FlowLayoutItem } from "flow_layout.slint";

export struct LinkAdapter {
    name: string,
    url: string,
}

export struct ImageLinkAdapter {
    image: image,
    name: string,
    url: string,
}

export component Link inherits TouchArea {
    in property <string> url;
    in property <string> name;
    in property <length> font-size: Styles.default-font-size;
    in property <int> font-weight: Styles.default-font-weight;
    in property <TextVerticalAlignment> vertical-alignment: bottom;

    mouse-cursor: pointer;

    clicked => { Navigator.navigate(url); }

    preferred-width: title.preferred-width;
    preferred-height: title.preferred-height;

    title := Texxt {
        vertical-alignment: vertical-alignment;
        width: root.width;
        text: name;
        // wrap: TextWrap.no-wrap;
        // overflow: TextOverflow.clip;
        font-weight: font-weight;
        font-size: font-size;
        color: parent.has-hover ? Palette.accent-foreground : Palette.foreground;
    }    
}
    

export component Links1 inherits HorizontalLayout {
    in property <[LinkAdapter]> links;
    in property <length> font-size: Styles.default-font-size;
    alignment: start;
    padding: 0;
    // TODO I think the kerning ends up incorrect when doing it this way. It
    // looks weird. But I don't know another way to get individual links with
    // fancy commas.
    for link[i] in links: HorizontalLayout {
        alignment: start;
        Link {
            name: link.name;
            url: link.url;
            font-size: font-size;
        }
        // TODO edge cases
        if i < links.length - 2:
            Texxt {
                vertical-alignment: bottom;
                text: ", ";
                font-size: font-size;
                wrap: TextWrap.char-wrap;
            }    
        if i == links.length - 2:
            Texxt {
                vertical-alignment: bottom;
                text: ", and ";
                font-size: font-size;
                wrap: TextWrap.char-wrap;
            }    
    }
}

export component Links inherits FlowLayout {
    in-out property <[LinkAdapter]> links: [{name: "heavy metal"},{name: "heavy metal thing cup stuff"},{name: "hard rock"},{name: "acid rock"}];
    in-out property <length> font-size: Styles.default-font-size;
    
    for i in links.length: FlowLayoutItem {
        item-infos: parent.item-infos;
        index: i;
        Link {
            name: links[i].name;
            url: links[i].url;
            font-size: font-size;
        }
    }
}

import { CardGrid, CardGridAdapter } from "../components/card_grid.slint";
import { HorizontalBox , VerticalBox} from "std-widgets.slint";
import { CardAdapter } from "../components/card.slint";
import { StyleMetrics , ScrollView, ListView, StandardTableView, Button, GroupBox, StandardListView, Palette} from "std-widgets.slint";
import { AppState, Styles, Navigator, Label, PageTitle, PageSubtitle } from "../common.slint";
import { PopupMenu, PopupMenuButton } from "../components/popup_menu.slint";

export global TrackListAdapter {
    in property <[[StandardListViewItem]]> row_data: [
        [ { text: "hi" }, { text: "hi" }, { text: "hi" }, { text: "hi" }, { text: "hi" }, { text: "hi" }, ],
        [ { text: "hi" }, { text: "hi" }, { text: "hi" }, { text: "hi" }, { text: "hi" }, { text: "hi" }, ],
        [ { text: "hi" }, { text: "hi" }, { text: "hi" }, { text: "hi" }, { text: "hi" }, { text: "hi" }, ],
    ];
    in property <[string]> row_keys;
    pure callback sort_table(int /* column */, bool /* ascending */);
    pure callback play_now(string /* key */);
    pure callback play_next(string /* key */);
    pure callback play_later(string /* key */);
}

component RowPopupMenu inherits PopupMenu {
    in-out property <int> popup-row;

    PopupMenuButton {
        text: "Play Last";
        icon: @image-url("../../icons/phosphor/SVGs/regular/list-plus.svg");
        clicked => { AppState.play_later(TrackListAdapter.row_keys[popup-row]); }
    }
    PopupMenuButton {
        text: "Play Next";
        icon: @image-url("../../icons/phosphor/SVGs/regular/queue.svg");
        clicked => { AppState.play_next(TrackListAdapter.row_keys[popup-row]); }
    }
    PopupMenuButton {
        text: "Play Now";
        icon: @image-url("../../icons/phosphor/SVGs/regular/play.svg");
        clicked => { AppState.play_now(TrackListAdapter.row_keys[popup-row]); }
    }
    PopupMenuButton {
        text: "Track Info";
        icon: @image-url("../../icons/phosphor/SVGs/regular/info.svg");
        clicked => { Navigator.navigate("dimple://track/" + TrackListAdapter.row_keys[root.popup-row]); }
    }
}    

export component TrackList inherits VerticalBox {
    alignment: start;
    padding: 0;

    VerticalLayout {
        PageTitle {
            text: "Tracks";
        }
        PageSubtitle {
            text: TrackListAdapter.row_data.length + " items";
        }
    }

    in-out property <length> row-menu-x;
    in-out property <length> row-menu-y;
    in-out property <int> row-menu-row;
    row-menu := RowPopupMenu {
        x: row-menu-x;
        y: row-menu-y;
        popup-row: row-menu-row;
        width: self.preferred-width;
        height: self.preferred-height;
    }

    table := StandardTableView {
        preferred-height: root.height;
        // https://docs.slint.dev/latest/docs/slint/src/language/builtins/structs#tablecolumn
        columns: [
            { title: "Title", horizontal_stretch: 0.40 },
            { title: "Album", horizontal_stretch: 0.20 },
            { title: "Artist", horizontal_stretch: 0.20 },
            { title: "Track #", horizontal_stretch: 0.10 },
            { title: "Length", horizontal_stretch: 0.10 },
        ];

        rows: TrackListAdapter.row_data;
        sort-ascending(index) => { TrackListAdapter.sort_table(index, true); }
        sort-descending(index) => { TrackListAdapter.sort_table(index, false); }
        row-pointer-event(row, event, point) => {
            if event.button == PointerEventButton.right 
                    && event.kind == PointerEventKind.down {
                row-menu-x = table.x + table.viewport-x + point.x;
                row-menu-y = table.y + table.viewport-y + point.y;
                row-menu-row = row;
                row-menu.show();
            }
            else if event.button == PointerEventButton.left 
                    && row == table.current-row
                    && event.kind == PointerEventKind.down {
                Navigator.navigate("dimple://track/" + TrackListAdapter.row_keys[row]);
            }
        }
    }    
}


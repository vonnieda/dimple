import { HorizontalBox , VerticalBox} from "std-widgets.slint";
import { LinkAdapter, Links, Link, LinkButtons} from "../components/link.slint";
import { CardAdapter } from "../components/card.slint";
import { StyleMetrics , ScrollView, ListView, Button, Palette} from "std-widgets.slint";
import { CardGrid } from "../components/card_grid.slint";
import { Styles, Navigator, AppState, Label, PageTitle, PageSubtitle, SectionTitle } from "../common.slint";
import { Tag, TagList } from "../components/tag.slint";
import { PopupMenu, PopupMenuButton } from "../components/popup_menu.slint";
import { BorderImage } from "../components/border_image.slint";

export global ArtistDetailsAdapter {
    in property <string> key;
    in property <CardAdapter> card: {
                image: {image: @image-url("../../icons/phosphor/PNGs/regular/vinyl-record.png")},
                title: {name: "A Reign of Fish"},
            };
    in property <string> disambiguation: "Not to be confused with Rain of Fish by Fargo.";
    in property <string> summary: "Fresh Pliers does it again with 'A Reign of Fish'. Ex nostrud culpa id veniam aliqua aliqua ipsum. Velit do id amet labore mollit id cillum commodo Lorem proident labore eu. Incididunt minim irure culpa excepteur officia sit consequat est mollit. Ipsum anim anim sunt dolore. Laborum consequat deserunt laboris ullamco cillum. Ullamco deserunt ut quis dolore aliquip esse consequat velit amet. Nulla tempor veniam dolor amet occaecat adipisicing nulla laboris.\n\nQui non irure anim irure nisi nulla ex aliquip. Sit do irure esse magna sit do eiusmod. Anim commodo velit non enim nulla.\n\nAnim incididunt dolore nulla laboris eu mollit Lorem minim reprehenderit in quis magna mollit. Labore Lorem esse anim ipsum esse irure ipsum proident deserunt officia consequat sunt sit. Ex laborum ipsum laboris nisi proident. Nulla culpa est commodo dolor. Magna sint id et ut esse mollit qui elit voluptate ea.";
    in property <[LinkAdapter]> genres: [{name: "heavy metal"},{name: "hard rock"},{name: "acid rock"},];
    in property <[LinkAdapter]> links: [{name: "https://bandcamp.com/arof",url: "internal://release/1234"}];
    in property <[CardAdapter]> releases: [card, card, card, card, card, card, card];
    
    in property <string> dump;
    in property <bool> save;
    in property <bool> love;
    in property <bool> download;
    
    pure callback set_save(bool);
    pure callback set_love(bool);
    pure callback set_download(bool);
}

export component ArtistDetails inherits ScrollView {
    horizontal-scrollbar-policy: always-off;

    VerticalBox {
        width: 100%;
        alignment: start;
        padding: 0;

        HorizontalBox {
            padding: 0;

            VerticalLayout {
                BorderImage {
                    width: Styles.thumbnail-width-extra-large;
                    height: Styles.thumbnail-width-extra-large;
                    source: ArtistDetailsAdapter.card.image.image;
                }
                HorizontalBox {
                    alignment: space-between;
                    Button {
                        icon: @image-url("../../icons/phosphor/SVGs/regular/list-plus.svg");
                        colorize-icon: true;                
                        clicked => { AppState.play_later(ArtistDetailsAdapter.key); }
                    }
                    Button {
                        icon: @image-url("../../icons/phosphor/SVGs/regular/queue.svg");
                        colorize-icon: true;
                        clicked => { AppState.play_next(ArtistDetailsAdapter.key); }
                    }
                    Button {
                        icon: @image-url("../../icons/phosphor/SVGs/regular/play.svg");
                        colorize-icon: true;                
                        clicked => { AppState.play_now(ArtistDetailsAdapter.key); }
                    }
                }
            }
            VerticalBox {
                alignment: start;
                padding: 0;
                
                VerticalLayout {
                    PageTitle {
                        text: ArtistDetailsAdapter.card.title.name;
                    }
                    if ArtistDetailsAdapter.disambiguation != "": PageSubtitle {
                        text: ArtistDetailsAdapter.disambiguation;
                    }
                }
                TagList {
                    tags: ArtistDetailsAdapter.genres;
                    height: self.preferred-height;
                }
                // LinkButtons {
                //     links: ArtistDetailsAdapter.links;
                //     height: self.preferred-height;
                // }
                if ArtistDetailsAdapter.summary != "": Label {
                    text: ArtistDetailsAdapter.summary;
                    wrap: word-wrap;
                    font-family: Styles.text-block-font-family;
                }        
            }
        }

        if ArtistDetailsAdapter.releases.length > 0: VerticalBox {
            alignment: start;
            padding: 0;
            SectionTitle {
                text: "Releases";
            }
            CardGrid {
                cards: ArtistDetailsAdapter.releases;
            }
        }

        if ArtistDetailsAdapter.links.length > 0: VerticalBox {
            alignment: start;
            padding: 0;
            SectionTitle {
                text: "Links";
            }
            for link in ArtistDetailsAdapter.links: Link {
                url: link.url;
                name: link.name;
            }
        }
    }
}


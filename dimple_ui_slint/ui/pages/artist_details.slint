import { HorizontalBox , VerticalBox} from "std-widgets.slint";
import { LinkAdapter, Links, Link} from "../components/link.slint";
import { CardAdapter } from "../components/card.slint";
import { StyleMetrics , ScrollView, ListView, Button} from "std-widgets.slint";
import { CardGrid } from "../components/card_grid.slint";
import { Palette, Navigator, AppState } from "../common.slint";
import { Tag } from "../components/tag.slint";
import {TagModel} from "../components/tag_card_grid.slint";

export struct ArtistDetailsAdapter {
    card: CardAdapter,
    summary: string,
    disambiguation: string,
    genres: [LinkAdapter],
    albums: [CardAdapter],
    singles: [CardAdapter],
    eps: [CardAdapter],
    others: [CardAdapter],
    links: [LinkAdapter],
    dump: string,
}

export component ArtistDetails inherits ScrollView {
    in property <ArtistDetailsAdapter> model: model_ph;
    in-out property <[TagModel]> tags: tags_ph;

    VerticalBox {
        alignment: start;
        spacing: StyleMetrics.layout-spacing * 2;
        // Header
        HorizontalLayout {
            alignment: start;
            spacing: StyleMetrics.layout-spacing;
            // Image
            Rectangle {
                width: Palette.thumbnail-width-extra-large;
                height: Palette.thumbnail-width-extra-large;
                border-radius: Palette.thumbnail-border-radius;
                border-color: Palette.thumbnail-border-color;
                border-width: Palette.thumbnail-border-width;
                clip: true;
                Image {
                    width: Palette.thumbnail-width-extra-large;
                    height: Palette.thumbnail-width-extra-large;
                    source: model.card.image.image;
                }
            }
            VerticalLayout {
                alignment: start;
                spacing: StyleMetrics.layout-spacing;
                // Title
                Text {
                    text: model.card.title.name;
                    font-weight: Palette.font-weight-bold;
                    font-size: 4rem;
                }
                // Disambiguation
                if model.disambiguation > 0: HorizontalLayout {
                    spacing: 4px;
                    Image {
                        source: @image-url("../../icons/phosphor/SVGs/regular/info.svg");
                        width: 1.5rem;
                        colorize: StyleMetrics.default-text-color;
                        padding-right: 8px;
                    }
                    Text {
                        vertical-alignment: bottom;
                        text: model.disambiguation;
                        // font-weight: Palette.font-weight-bold;
                        font-size: 1.3rem;
                        color: StyleMetrics.default-text-color.darker(0.5);
                    }
                }
                // Genres
                if model.genres.length > 0: HorizontalLayout {
                    alignment: start;
                    Text {
                        text: "In ";
                        font-size: 1.3rem;
                    }    
                    Links {
                        links: model.genres;
                        font-size: 1.3rem;
                    }
                }
                // Summary
                Text {
                    text: model.summary;
                    wrap: word-wrap;
                    font-size: 1.2rem;
                }
            }
        }

        // Albums
        if model.albums.length > 0: VerticalLayout {
            Text {
                text: "Albums";
                font-weight: Palette.font-weight-bold;
                font-size: 2rem;
            }
            CardGrid {
                cards: model.albums;
                parent-width: root.width;
            }
        }

        // Singles
        if model.singles.length > 0: VerticalLayout {
            Text {
                text: "Singles";
                font-weight: Palette.font-weight-bold;
                font-size: 2rem;
            }
            CardGrid {
                cards: model.singles;
                parent-width: root.width;
            }
        }

        // EPs
        if model.eps.length > 0: VerticalLayout {
            Text {
                text: "EPs";
                font-weight: Palette.font-weight-bold;
                font-size: 2rem;
            }
            CardGrid {
                cards: model.eps;
                parent-width: root.width;
            }
                }

        // Other Releases
        if model.others.length > 0: VerticalLayout {
            Text {
                text: "Other Releases";
                font-weight: Palette.font-weight-bold;
                font-size: 2rem;
            }
            CardGrid {
                cards: model.others;
                parent-width: root.width;
            }
        }

        // Links
        if model.links.length > 0: VerticalLayout {
            Text {
                text: "Links";
                font-weight: Palette.font-weight-bold;
                font-size: 2rem;
            }
            for link in model.links: Link {
                url: link.url;
                name: link.name;
            }
        }

        // Debug Dump
        if AppState.debug: VerticalLayout {
            Text {
                text: "Debug";
                font-weight: Palette.font-weight-bold;
                font-size: 2rem;
            }
            Text {
                text: model.dump;
                wrap: word-wrap;
            }
        }
    }

    property <LinkAdapter> link_ph: {
        name: "A Reign of Fish",
        url: "internal://release/1234"
    };
    
    property <CardAdapter> card_ph: {
        image: {image: @image-url("../../icons/phosphor/PNGs/regular/vinyl-record.png"),name: "A Reign of Fish",url: "internal://release/1234"},
        title: {name: "A Reign of Fish",url: "internal://release/1234"},
        sub-title: {name: "Fresh Pliers",url: "internal://artist/9876"},
    };

    property <ArtistDetailsAdapter> model_ph: {
        card: card_ph,
        summary: "Lorem ipsum lorem upsum ipsum ipsum lorem upsum ipsum ipsum lorem upsum ipsum.",
        disambiguation: "The other one",
        genres: 
        [
            {name: "metal",url: "internal://release/1234"},
            {name: "heavy metal",url: "internal://release/1234"},
            {name: "light metal",url: "internal://release/1234"},
        ],
        albums: [card_ph, card_ph, card_ph, card_ph, card_ph],
        singles: [],
        eps: [],
        others: [],
        links: [link_ph, link_ph],
        dump: "aj asdkjha sdj haksjd jk ads",
    };

    in-out property <[TagModel]> tags_ph: [
        { 
            color: #75a222,
            name: "Album",
            selected: true,
        },
        { 
            color: #5962e3,
            name: "EP",
        },
        { 
            color: #da8d29,
            name: "Single",
        },
        { 
            color: #d9455d,
            name: "Other",
        },
    ];    
}

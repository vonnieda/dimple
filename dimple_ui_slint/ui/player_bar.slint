import { Slider , GroupBox, HorizontalBox} from "std-widgets.slint";
import { StyleMetrics } from "std-widgets.slint";
import { CardAdapter } from "components/card.slint";
import {Link, LinkAdapter} from "./components/link.slint";
import { Palette, Navigator } from "./common.slint";

export struct PlayerBarAdapter {
    now_playing_artist: CardAdapter,
    now_playing_release: CardAdapter,
    now_playing_recording: CardAdapter,
    up_next_artist: CardAdapter,
    up_next_release: CardAdapter,
    up_next_recording: CardAdapter,
    position_seconds: int,
    duration_seconds: int,
    position_label: string,
    duration_label: string,
}

component InfoAreaLabel inherits HorizontalLayout {
    spacing: 4px;

    in property <image> icon;
    // in property <string> text;
    // in property <string> url;
    in property <float> font-weight;
    in property <LinkAdapter> link;

    Image {
        source: icon;
        height: 1.5rem;
        width: 1.5rem;
        colorize: StyleMetrics.default-text-color;
    }
    Link {
        url: link.url;
        name: link.name;
        vertical-alignment: top;
        font-size: 1.5rem;
        font-weight: font-weight;
    }
}

export component PlayerBar {
    in-out property <PlayerBarAdapter> model;

    HorizontalLayout {
        spacing: StyleMetrics.layout-spacing * 2;
        Rectangle {
            width: img.width;
            height: img.height;
            border-radius: Palette.thumbnail-border-radius;
            border-width: Palette.thumbnail-border-width;
            border-color: Palette.thumbnail-border-color;
            clip: true;
            // TODO needs imagelink
            img := Image {
                source: model.now-playing-recording.image.image;
                width: Palette.thumbnail-width-medium;
                height: Palette.thumbnail-width-medium;
            }    
        }
        Rectangle {
            horizontal-stretch: 1;
            clip: true;
            VerticalLayout {
                spacing: 2px;
                InfoAreaLabel {
                    icon: @image-url("../icons/phosphor/SVGs/bold/music-notes-bold.svg");
                    link: model.now-playing-artist.title;
                    font-weight: Palette.font-weight-bold;
                }
                InfoAreaLabel {
                    icon: @image-url("../icons/phosphor/SVGs/regular/vinyl-record.svg");
                    link: model.now-playing-release.title;
                }
                InfoAreaLabel {
                    icon: @image-url("../icons/phosphor/SVGs/regular/users-three.svg");
                    link: model.now-playing-recording.title;
                }
                Rectangle {
                    vertical-stretch: 1;
                }
                Slider { 
                    value: model.position-seconds;
                    maximum: model.duration-seconds;
                    vertical-stretch: 0;
                }
                HorizontalLayout {
                    Text {
                        text: model.position-label;
                        font-size: 0.9rem;
                    }
                    Text {
                        horizontal-alignment: right;
                        text: model.duration-label;
                        font-size: 0.9rem;
                    }
                }
            }
        }
        VerticalLayout {
            alignment: start;
            spacing: 2px;
            width: inner_rect.width * 1.5;
            HorizontalLayout {
                alignment: center;
                inner_rect := Rectangle {
                    width: inner_img.width;
                    height: inner_img.height;
                    border-radius: Palette.thumbnail-border-radius;
                    border-width: Palette.thumbnail-border-width;
                    border-color: Palette.thumbnail-border-color;
                    clip: true;
                    inner_img := Image {
                        source: @image-url("../images/light.png");
                        width: Palette.thumbnail-width-small;
                        height: Palette.thumbnail-width-small;
                    }    
                }
            }
            Text {
                horizontal-alignment: center;
                text: "Finality Season";
                wrap: word-wrap;
                overflow: elide;
                font-weight: Palette.font-weight-bold;
                max-height: 3rem;
            }
            Text {
                horizontal-alignment: center;
                text: "The Frigid Depths of the Heart of the Kit-Kat CEO";
                wrap: word-wrap;
                overflow: elide;
                max-height: 3rem;
            }
        }
    }
}

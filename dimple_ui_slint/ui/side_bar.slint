import { Button , LineEdit, HorizontalBox, GroupBox} from "std-widgets.slint";
import { Navigator } from "common.slint";
import {CardAdapter } from "card.slint";
import { Palette, Navigator } from "common.slint";
import {StyleMetrics, VerticalBox, TextEdit} from "std-widgets.slint";
import { ImageLinkAdapter, LinkAdapter, Links, Link } from "./common.slint";

component SideBarImageItem inherits Rectangle {
    in property <ImageLinkAdapter> image: {
        image: @image-url("../images/dark.png"),
        name: "We Were Heading North",
        url: "internal://release/1234"
    };

    in property <LinkAdapter> title: {
        name: "We Were Heading North",
        url: "internal://release/1234",
    };

    in property <LinkAdapter> sub-title: {
        name: "Artist",
        url: "internal://artist/9876",
    };

    in property <color> image-colorize;

    in property <length> image-width: Palette.thumbnail-width-sidebar;

    HorizontalLayout {
        spacing: 8px;

        TouchArea {
            width: image-width;
            height: image-width;
            mouse-cursor: pointer;
            clicked => { Navigator.navigate(image.url); }
            Rectangle {
                width: 100%;
                height: 100%;
                border-radius: Palette.thumbnail-border-radius;
                clip: true;
                drop-shadow-color: black;
                drop-shadow-blur: 3px;
                drop-shadow-offset-y: 1px;
                Image {
                    colorize: image-colorize;
                    width: 100%;
                    height: 100%;
                    source: image.image;
                    accessible-role: button;
                    accessible-description: image.name;
                }    
            }
        }
        VerticalLayout {
            alignment: center;
            spacing: 4px;
            title-area := Link {
                url: title.url;
                name: title.name;
                font-size: 1.3rem;
                font-weight: Palette.font-weight-bold;
            }
            sub-title-area := Link {
                url: sub-title.url;
                name: sub-title.name;
                font-size: 1.2rem;
            }
        }
    }
}

component SideBarMenuItem inherits HorizontalLayout {
    in property <image> image: @image-url("../icons/phosphor/SVGs/regular/house.svg");
    in property <string> url: "dimple://home";
    in property <string> text: "Home";

    spacing: 8px;
    TouchArea {
        width: Palette.thumbnail-width-sidebar;
        height: 24px;
        clicked => { Navigator.navigate(url); }
        Image {
            source: image;
            width: 24px;
            colorize: parent.has-hover 
                ? Palette.link-color-hover
                : StyleMetrics.default-text-color;

        }
    }
    VerticalLayout {
        alignment: center;
        Link {
            font-size: 1.4rem;
            name: text;
            font-weight: Palette.font-weight-bold;
            url: url;
        }
    }
}

export component SideBar inherits VerticalBox {
    padding: 0;

    LineEdit {
        placeholder-text: "Search...";
        // TODO change back to edited when better handling in the search function
        accepted(query) => { Navigator.navigate("dimple://search/" + query); }
        font-size: 1.3rem;
    }
    SideBarMenuItem {
        image: @image-url("../icons/phosphor/SVGs/light/arrow-left-light.svg");
        text: "Back";
        url: "dimple://back";
    }
    SideBarMenuItem {
        image: @image-url("../icons/phosphor/SVGs/light/arrow-clockwise-light.svg");
        text: "Refresh";
        url: "dimple://refresh";
    }
    SideBarMenuItem {
        image: @image-url("../icons/phosphor/SVGs/regular/house.svg");
        url: "dimple://home";
        text: "Home";
    }
    SideBarMenuItem {
        image: @image-url("../icons/phosphor/SVGs/regular/books.svg");
        url: "dimple://artists";
        text: "Library";
    }
    SideBarImageItem {
        image: { image: @image-url("../images/wwhn-lightness.png"), 
            name: "We Were Heading North",url: "dimple://artist/73084492-3e59-4b7f-aa65-572a9d7691d5" };
        title: { name: "We Were Heading North",url: "dimple://artist/73084492-3e59-4b7f-aa65-572a9d7691d5" };
        sub-title: {name: "Artist",url: "dimple://artist/73084492-3e59-4b7f-aa65-572a9d7691d5"};
    }
    SideBarImageItem {
        image: { image: @image-url("../images/dark.png"), 
            name: "We Were Heading North", url: "internal://release/1234" };
        title: { name: "Blackgaze Essentials", url: "internal://release/1234" };
        sub-title: { name: "Playlist • 2613 Songs", url: "internal://artist/9876" };
    }
    SideBarImageItem {
        image: { image: @image-url("../images/dark.png"),
            name: "We Were Heading North", url: "internal://release/1234" };
        title: { name: "Death Metal + Horns", url: "internal://release/1234" };
        sub-title: { name: "Playlist • 14 Songs",url: "internal://artist/9876" };
    }
    // Fills the space between the last normal item and the settings, at the bottom.
    Rectangle {
        
    }
    SideBarMenuItem {
        image: @image-url("../icons/phosphor/SVGs/light/gear-light.svg");
        text: "Settings";
        url: "dimple://settings";
    }
}




    // SideBarItem {
    //     image: { image: @image-url("../icons/phosphor/SVGs/regular/users-three.svg"), name: "Artists", url: "internal://release/1234" };
    //     title: { name: "Artists", url: "internal://release/1234" };
    //     sub-title: { name: "", url: "internal://artist/9876" };
    //     image-colorize: StyleMetrics.default-text-color;
    // }
    // SideBarItem {
    //     image: { image: @image-url("../icons/phosphor/SVGs/regular/vinyl-record.svg"), name: "Albums", url: "internal://release/1234" };
    //     title: { name: "Albums", url: "internal://release/1234" };
    //     sub-title: { name: "", url: "internal://artist/9876" };
    //     image-colorize: StyleMetrics.default-text-color;
    // }
    // SideBarItem {
    //     image: { image: @image-url("../icons/phosphor/SVGs/regular/music-notes.svg"), name: "Songs", url: "internal://release/1234" };
    //     title: { name: "Songs", url: "internal://release/1234" };
    //     sub-title: { name: "", url: "internal://artist/9876" };
    //     image-colorize: StyleMetrics.default-text-color;
    // }

    // SideBarItem {
    //     image: { image: @image-url("../icons/phosphor/SVGs/regular/music-notes.svg"), name: "Artists", url: "internal://release/1234" };
    //     title: { name: "Genres", url: "internal://release/1234" };
    //     sub-title: { name: "", url: "internal://artist/9876" };
    //     image-colorize: StyleMetrics.default-text-color;
    // }


        // Button {
    // }
    // Button {
    //     text: "Artists";
    //     clicked => { Navigator.navigate("dimple://artists"); }
    // }
    // // TODO Albums, filtered, I think.
    // Button {
    //     text: "Releases";
    //     clicked => { Navigator.navigate("dimple://release-groups"); }
    // }
    // Button {
    //     text: "Genres";
    //     clicked => { Navigator.navigate("dimple://genres"); }
    // }
    // LineEdit {
    //     horizontal-stretch: 1;
    //     placeholder-text: "Search for artists, albums, songs, genres, lyrics, bios, years, instruments, labels, etc.";
    //     // TODO change back to edited when better handling in the search function
    //     accepted(query) => { Navigator.navigate("dimple://search/" + query); }
    // }
    // Rectangle {}
